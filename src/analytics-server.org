#+TITLE:     Analytics Server Role                                                                                                                                    
#+DATE:      2015-07-14 Tuesday                                                                                                                                     
#+PROPERTY: session *scratch*
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: org-templates/level-0.org
#+DESCRIPTION: Analytics Server Implementation Documentation
#+OPTIONS: ^:nil

* Introduction
* Requirement
* Design
* Implementation
** Structure of Scripts

#+BEGIN_EXAMPLE
roles/analytics_server
|-- files
|   `-- analytics_http.conf
|-- handlers
|   `-- main.yaml
|-- tasks
|   `-- main.yaml
`-- templates
    `-- analytics_server_iptables
#+END_EXAMPLE

** Firewall Rules

#+BEGIN_SRC yml -n :tangle roles/analytics_server/templates/analytics_server_iptables :eval no
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
#Accept loopback connections
-A INPUT -i lo -d 127.0.0.0/8 -j ACCEPT
#Rate limit new connections to 20 new connections per 30 seconds
-A INPUT ! -p udp -m state --state NEW -m recent --name new_limit --set
-A INPUT ! -p udp -m state --state NEW -m recent --name new_limit --rcheck --seconds 30 --hitcount 20 -m limit --limit 2/min -j LOG --log-prefix "new_limit_"
-A INPUT ! -p udp -m state --state NEW -m recent --name ssh_limit --rcheck --seconds 30 --hitcount 20 -j DROP
#Accept ICMP ping requests at limited rate
-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT
-A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG
-A INPUT -p icmp --icmp-type echo-request -j DROP
#Allow ongoing connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
#Allow incoming SSH connections from ansible server IPs.
{% for item in ansible_server_ips  %}
-A INPUT -m state --state NEW -s {{item}} -p tcp -m tcp --dport 22 -j ACCEPT
{% endfor %}
#Allow incoming connections from reverse proxy server on TCP port 22
-A INPUT -m state --state NEW -s {{reverseproxy_ip}} -p tcp -m tcp --dport 22 -j ACCEPT
#Allow incoming connections from http container on base on TCP port 22
-A INPUT -m state --state NEW -s {{http_container}} -p tcp -m tcp --dport 22 -j ACCEPT
#Allow incoming NRPE queries for nagios from nagios servers
-A INPUT -m state --state NEW -p tcp -m tcp --dport 5666 -j ACCEPT
#Allow SNMP queries from cacti servers
-A INPUT -p udp -m udp --dport 161 -j ACCEPT
-A INPUT -p udp -m udp --dport 162 -j ACCEPT
#Log all other "blocked_input_" attempts with rate limiting
-A INPUT -m state --state NEW -m limit --limit 2/min -j LOG --log-prefix "blocked_input_"
#Reply with proper ICMP error message and reject the connection
-A INPUT -j REJECT --reject-with icmp-host-prohibited
#Disable packet forwarding
-A FORWARD -j REJECT
#########Output rules############
#Allow outgoing connections to localhost
-A OUTPUT -s 127.0.0.0/8 -o lo -j ACCEPT
#Allow ongoing connections
-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#Allow DNS queries
-A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
#Allow server to send emails.  Required for sending logwatch emails
-A OUTPUT -p tcp -m tcp --dport 25 -j ACCEPT
#Allow server to contact web-servers.  This is must for reverseproxy to be able to forward requests to internal web servers
-A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
# Allow server to send request on 9200 to analytics-api
-A OUTPUT -p tcp -m tcp -s 10.100.1.12 --dport 9200 -j ACCEPT
#Allow outgoing ping requests
-A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
#Allow outgoing connections to rsyslog server
-A OUTPUT -p udp -m udp --dport 514 -j ACCEPT
#Allow outgoing connections to OSSEC server
-A OUTPUT -p udp -m udp --dport 1514 -j ACCEPT
#Log all other "blocked_output_" attempts
-A OUTPUT -m state --state NEW -m limit --limit 2/min -j LOG --log-prefix "blocked_output_"
#Allow outgoing connections on tcp port 8000 to internal subnet, this is for bandwidthd on router
-A OUTPUT -p tcp -m tcp -d {{router_internal_ip}} --dport 8000 -j ACCEPT
#Reply with proper ICMP error message and reject the connection
-A OUTPUT -j REJECT --reject-with icmp-host-prohibited
COMMIT
#+END_SRC
** Configure server

#+BEGIN_SRC yml :tangle roles/analytics_server/tasks/main.yaml :eval no
- name: Configure firewall rules
  template: src=analytics_server_iptables dest=/etc/sysconfig/iptables owner=root group=root mode=0600
  notify:
   - restart iptables

#Copying the RP public key, to allow passwordless rsync of AWstats 
- name: Copy the RP pub key to Analytics server
  authorized_key: user=root key="{{ lookup('file', 'rp_pub_key') }}" state=present

# Install epel-release to get pip, and to install flask
- name: install http,epel-release, python-pip, mod_wsgi
  yum: name={{ item }} state=installed
  with_items:
   - epel-release
   - python-pip
   - mod_wsgi
   - httpd

#Use pip to install Flask, Flask-Cache
- name: install Flask, Flask-Cache using pip
  pip: name={{item}} state=present
  with_items:
   - Flask
   - Flask-Cache

#Copy the WSGI file to http configuration under conf.d/
- name: Copying analytics_http.conf to analytics server
  copy: src=analytics_http.conf dest=/etc/http/conf.d/analytics_http.conf
  notify:
   - restart apache
#+END_SRC

** Handlers

#+BEGIN_SRC yml :tangle roles/analytics_server/handlers/main.yaml :eval no
---
- name: restart iptables
  service: name=iptables state=restarted

- name: restart apache
  service: name=httpd state=restarted enabled=yes

#+END_SRC

** =apache= configuration for Web server gateway interface(WSGI)

#+BEGIN_SRC yml :tangle roles/analytics_server/files/analytics_http.conf :eval no
WSGIScriptAlias / /var/www/html/analytics/analytics.wsgi
WSGIScriptReloading On
<Directory /var/www/html/analytics>
     Order deny,allow
     Allow from all
 </Directory>
#+END_SRC
** Main yaml file

#+BEGIN_SRC yml :tangle analytics_server.yaml :eval no
---
- name: This file configures the analytics server
  hosts: analytics_server
  remote_user: root

  vars:
    host_name: analytics-server
    
  roles:
    - common
    - ossec_client
    - rsyslog_client
    - nagios_client
    - analytics_server
#+END_SRC
* Test cases
